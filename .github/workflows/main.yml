# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # outputs:
    #   kubeconfig:  ${{ steps.apply.outputs.kubeconfig }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init 
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Apply
        id: apply
        working-directory: ./terraform
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #terraform apply -auto-approve     
        #echo "::set-output name=kubeconfig::terraform output kubeconfig"
      
  docker:
    name: "docker"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: austinabro321/node_greeting
          tags: latest
          registry: docker.io
          dockerfile: server/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    # steps:
    #   -
    #     name: Set up QEMU
    #     uses: docker/setup-qemu-action@v1
    #   -
    #     name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v1
    #   -
    #     name: Login to DockerHub
    #     uses: docker/login-action@v1 
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    #   -
    #     name: Build and push
    #     id: docker_build
    #     uses: docker/build-push-action@v2
    #     with:
    #       push: true
    #       directory: server
    #       #file: /server/dockerfile
    #       tags: austinabro321/node_greeting:latest
      # - name: build and push
      #   id: build
      #   working-directory: ./server
      #   run: |
      #     docker build . -t austinabro321/node_greeting:latest
      #     docker push austinabro321/node_greeting:latest
      # -
      #   name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: [docker,Terraform]
    env:
      AWS_REGION: us-east-2
      EKS_CLUSTER_NAME: terraform-eks-demo-cluster
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubeconfig
        id: setup-kubeconfig
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
      - name: Deploy k8s yaml
        id: deploy-k8s-yaml
        env:
          K8S_YAML_DIR: ./eks-k8s 
          IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        run: |        
          kubectl apply -f $K8S_YAML_DIR/svc-load-balancer.yml
          kubectl apply -f $K8S_YAML_DIR/deploy.yml
          kubectl get services -o wide
          kubectl get pods        
#          kubectl set image deployments.apps/greeting myapp=$IMAGE_NAME